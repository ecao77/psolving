{"version":3,"sources":["logo.svg","Navbar.js","firebaseConfig.js","ExperienceBar.js","Card.js","Learn.js","Home.js","About.js","Login.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","Navbar","_ref","username","React","createElement","className","Link","to","src","logo","alt","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","ExperienceBar","totalXP","_useState","useState","_useState2","_slicedToArray","isFlickering","setIsFlickering","useEffect","flickerTimer","setTimeout","clearTimeout","level","currentXP","levelXP","xpPercentage","Fragment","concat","style","width","transition","Card","problem","isOpen","setIsOpen","onClick","question","Collapsible","open","answer","split","replace","_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","this","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","delegateYield","Learn","props","app","initializeApp","db","getFirestore","setProblem","_useState3","_useState4","userAnswer","setAnswer","_useState5","_useState6","loading","setLoading","_useState7","_useState8","reveal","setReveal","_useState9","_useState10","correct","setStatus","_useState11","_useState12","setXP","_useState13","_useState14","completedProblems","setCompletedProblems","_useState15","_useState16","isNewProblem","setIsNewProblem","problemsCollection","collection","progressCollection","expCollection","fetchProblem","_fetchProblem","apply","arguments","_asyncToGenerator","_callee2","ID","problemQuery","querySnapshot","_problem","_context2","Math","floor","random","query","where","getDocs","empty","docs","data","t0","console","error","updateUser","_x","_x2","_updateUser","_callee3","problemId","entry","progressQuery","progressRef","progress","_context3","id","score","addDoc","ref","updateDoc","numericalAnswer","handleSubmit","preventDefault","match","prevCompletedProblems","_toConsumableArray","confetti","particleCount","spread","origin","x","gravity","startVelocity","ticks","document","getElementById","classList","add","remove","_fetchXP","_callee4","xpQuery","xpSnapshot","exp","_context4","xp","alert","fetchXP","_callee","expQuery","docRef","_context","pushXP","placeholder","onChange","target","onKeyDown","key","map","completedProblem","index","onAnimationEnd","Home","About","isVerified","setIsVerified","onSubmit","log","Recaptcha","sitekey","render","verifyCallback","response","Login","onUsernameChange","setUsername","isLoggedIn","setIsLoggedIn","usernameConvention","isValidUsername","inputUsername","test","App","Router","basename","process","Routes","Route","path","element","newUsername","reportWebVitals","onPerfEntry","Function","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","StrictMode"],"mappings":"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","file":"static/js/main.a2092555.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.719d9977.svg\";","import React from 'react';\nimport './Navbar.css';\nimport { Link } from 'react-router-dom'; // Import Link from react-router-dom\nimport logo from './logo.svg'\n\nfunction Navbar({ username }) {\nreturn (\n    <nav className=\"navbar\">\n        <Link to = \"/\"> <img src={logo} alt=\"logo\" className = \"logo\"/> </Link>\n        {/* <Link to=\"/\" className=\"big-link\">Problem Solver</Link> */}\n        <ul className=\"nav-links\">\n            <li><Link to=\"/\">Home</Link></li>\n            <li><Link to=\"/learn\">Learn!</Link></li> {/* Use Link for navigation */}\n            <li><Link to=\"/about\">About</Link></li>\n            <li>{username ? <Link to=\"/login\" className = \"bold\"> {username} </Link> : <Link to=\"/login\">Login</Link>}</li>\n        </ul>\n    </nav>\n);\n}\n\nexport default Navbar;","const firebaseConfig = {\n    apiKey: \"AIzaSyCf_79zC32PO18MwWYPMa5ZaWb_ANV6XR4\",\n    authDomain: \"psidb-b0d89.firebaseapp.com\",\n    projectId: \"psidb-b0d89\",\n    storageBucket: \"psidb-b0d89.appspot.com\",\n    messagingSenderId: \"146054594109\",\n    appId: \"1:146054594109:web:774b663999c720e907b454\",\n    measurementId: \"G-50PDEFHR9B\"\n};\n\nexport default firebaseConfig;","import React, {useState, useEffect} from \"react\";\n\nconst ExperienceBar = ({ totalXP }) => {\n    \n    const [isFlickering, setIsFlickering] = useState(false);\n\n\n    useEffect(() => {\n        if (isFlickering) {\n            const flickerTimer = setTimeout(() => {\n            setIsFlickering(false);\n          }, 500); // Adjust the duration as needed\n            return () => clearTimeout(flickerTimer);\n        }\n    }, [isFlickering]);\n\n    useEffect(() => {\n        setIsFlickering(true);\n    }, [totalXP]);\n\n    const baseXP = 200;\n    const incrementalXP = 300;\n    let level = 1;\n    let currentXP = totalXP;\n\n    while (currentXP - (incrementalXP * (level-1) + baseXP) >= 0) {\n        currentXP -= (incrementalXP * (level-1) + baseXP);\n        level++;\n    }\n\n    const levelXP = 200 + (level - 1) * 300;\n    const xpPercentage = (currentXP / levelXP) * 100;\n\n    return (\n        <>\n            <p className = \"experience-desc top-space\"> {totalXP} exp points </p>\n            <div className=\"experience-bar\">\n                <div className={`experience-fill ${isFlickering ? 'flickering' : ''}`} style={{ width: `${xpPercentage}%`, transition: \"width 0.5s\" }}>\n                </div>\n            </div>        \n            <p className=\"experience-bottom bottom-space\">\n                <span className=\"level-text\">LEVEL {level}</span> \n                <span className=\"exp-text\"> {levelXP-currentXP} exp to LEVEL {level+1} </span>\n            </p>\n        </>\n    );  \n};\n\nexport default ExperienceBar;\n","import React, { useState } from 'react';\nimport Collapsible from 'react-collapsible'; // Assuming you have successfully resolved the 'react-collapsible' module\n\nfunction Card({ problem }) {\n    const [isOpen, setIsOpen] = useState(false);\n\n    const toggleOpen = () => {\n        setIsOpen(!isOpen);\n    };\n\n    const equations = /\\<<.*?>>/g;\n\n    return (\n        <>\n            <div className=\"card\">\n                <div className=\"card-top card-color1 no-highlight\" onClick={toggleOpen}>\n                    <p className=\"card-text\">{problem.question}</p>\n                </div>\n                <Collapsible open={isOpen}>\n                    <div className=\"card-bottom card-color2 no-highlight\">\n                        <p className=\"card-text\">{problem.answer.split('####')[0].replace(equations, '')}</p>\n                    </div>\n                </Collapsible>\n            </div>\n            <div className = \"little-break\"> \n                \n            </div>\n        </>\n    );\n}\n\nexport default Card;","import React, { useState, useEffect } from 'react';\nimport './Webpage.css';\nimport { initializeApp } from 'firebase/app';\nimport { getFirestore, collection, updateDoc, addDoc, getDocs, where, query, doc } from 'firebase/firestore';\nimport firebaseConfig from './firebaseConfig.js';\nimport ExperienceBar from './ExperienceBar';\nimport confetti from 'canvas-confetti';\nimport Card from './Card';\n\nfunction Learn( props ) {\n\n    const app = initializeApp(firebaseConfig);\n    const db = getFirestore(app);\n\n    const {username} = props;\n    const [problem,    setProblem]  = useState(null);\n    const [userAnswer, setAnswer]   = useState(null);\n    const [loading,    setLoading]  = useState(true);\n    const [reveal,     setReveal]   = useState(false);\n    const [correct,    setStatus]   = useState(true);\n    const [currentXP,  setXP]       = useState(0); \n    const [completedProblems, setCompletedProblems] = useState([]);\n    const [isNewProblem, setIsNewProblem] = useState(false);\n\n    const problemsCollection = collection(db, 'problems');\n    const progressCollection = collection(db, 'progress');\n    const expCollection = collection(db, 'exp');\n\n    async function fetchProblem () {\n        const ID = `0000${Math.floor(Math.random() * 800)}`.slice(-4);\n        const problemQuery = query(problemsCollection, where('id', '==', ID));\n\n        try {\n            const querySnapshot = await getDocs(problemQuery);\n            if (!querySnapshot.empty) {\n                const problem = querySnapshot.docs[0].data();\n                setProblem(problem); \n            } else {\n                setProblem(null);\n            }\n            setLoading(false);\n        } catch (error) {\n            console.error('Error fetching problem by title:', error);\n            throw error;\n        }\n    };\n\n    async function updateUser(problemId, correct) {\n        let entry = {\n            username: username,\n            id: problemId,\n            score: correct ? 1 : -1,\n        };\n\n        const progressQuery = query(progressCollection, where('id', '==', problemId), where('username', '==', username));\n\n        try {\n            const querySnapshot = await getDocs(progressQuery);\n\n            if (querySnapshot.empty) {\n                await addDoc(progressCollection, entry);\n            }\n            else {\n                const progressRef = querySnapshot.docs[0].ref;\n                const progress = querySnapshot.docs[0].data();\n\n                if (correct) {\n                    entry.score = progress.score + 1;\n                } else {\n                    entry.score = progress.score - 1;\n                }\n\n                await updateDoc(progressRef, entry);\n            }\n        } catch (error) {\n            console.error('Error updating: ', error);\n        }\n    }\n\n    const numericalAnswer = /#### (\\d+)/;\n    const equations = /\\<<.*?>>/g;\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n    \n        if (userAnswer === problem.answer.match(numericalAnswer)[1]) {\n            setCompletedProblems(prevCompletedProblems => [...prevCompletedProblems, problem]);\n            setIsNewProblem(true);\n            if(username !== '') {\n                if (correct) {\n                    updateUser(problem.id, true);\n                } else {\n                    updateUser(problem.id, false);\n                }\n            }\n            setXP(currentXP + Math.floor(Math.random() * 50) + 100);\n            {/* alert('Correct answer!'); */}\n\n            setReveal(false);\n            setStatus(true);\n            fetchProblem();\n\n            confetti({\n                particleCount: 100,\n                spread: 45,\n                origin: { y: 0.4, x: 0.65 },\n                gravity: 1,\n                startVelocity: 20,\n                ticks: 100,\n            });\n\n\n            setTimeout(() => {\n            confetti.reset();\n            }, 1000);\n\n        } else {\n            setStatus(false);\n            setAnswer('');\n            document.getElementById(\"answer-input\").classList.add(\"shake\");\n            setTimeout(() => {\n                document.getElementById(\"answer-input\").classList.remove(\"shake\");\n            }, 500);\n            {/* alert('Incorrect answer!'); */}\n        }\n        setAnswer('');\n    };\n\n    const handleForfeit = (e) => {\n        e.preventDefault();\n\n        setReveal(true);\n        setStatus(false);\n    }\n\n    const handleKeyPress = (e) => {\n        if (e.key === 'Enter') {\n            handleSubmit(e);\n        }\n    };\n\n    async function fetchXP () {\n        if(username !== '') {\n            const xpQuery = query(expCollection, where('username', '==', username));\n            try {\n                const xpSnapshot = await getDocs(xpQuery);\n                if (!xpSnapshot.empty) {\n                    const exp = xpSnapshot.docs[0].data().xp;\n                    setXP(exp);\n                } else {\n                    setXP(0);\n                }\n            } catch (error) {\n                console.error('Error fetching problem by title:', error);\n                alert(error);\n            }\n        }\n    };\n    \n    useEffect(() => {fetchProblem(); fetchXP();}, []);\n\n    useEffect(() => {\n        if(username !== \"\") {\n            const pushXP = async() => {\n                const expQuery = query(expCollection, where('username', '==', username));\n                const querySnapshot = await getDocs(expQuery);\n\n                if (querySnapshot.empty) {\n                    await addDoc(expCollection, {username: username, xp: currentXP});\n                } else {\n                    if (correct) {\n                        const docRef = querySnapshot.docs[0].ref;\n                        await updateDoc(docRef, {xp: currentXP});\n                    }\n                }\n            }\n\n            pushXP().catch(console.error);\n        }\n    }, [currentXP]);\n\n    const renderCompletedProblems = () => {\n        return (\n            <div className=\"completed-problems\">\n                <h2>Completed Problems</h2>\n                {completedProblems.slice().reverse().map((completedProblem, index) => (\n                <div\n                    key={index}\n                    className={`card ${index === 0 && isNewProblem ? 'slide-in' : ''}`}\n                    onAnimationEnd={() => {\n                    if (index === 0 && isNewProblem) {\n                        setIsNewProblem(false);\n                    }\n                    }}\n                >\n                    <Card problem={completedProblem} />\n                </div>\n                ))}\n            </div>\n        );\n    };\n    \n\n    return (\n        <header className=\"webpage\">\n            {/* <h1 className=\"Title\"> Questions </h1> */}\n            <ExperienceBar totalXP = {currentXP} />\n\n            {loading ? (\n                    <div className=\"fixed-box\">\n                    <p className=\"loading-text\"> Loading... </p>\n                    </div>\n                ) : (\n                <>\n                    <div className=\"problem-box\">\n                        {problem ? (\n                            <>\n                                <p className=\"problem-text no-highlight\"> {problem.question} </p>\n                                {reveal && (\n                                    <div className = \"solution\">\n                                        <p className = \"problem-text\">\n                                            Answer: {problem.answer.match(numericalAnswer)[1]}\n                                        </p>\n                                        <p className = \"problem-text\">\n                                            {problem.answer.split('####')[0].replace(equations, '')}\n                                        </p>\n                                        <p className = \"problem-text bold\">\n                                            Type the correct answer to move forward.\n                                        </p>\n                                    </div>\n                                )}\n                            </>\n                        ) : (\n                            <p className=\"problem-text\"> Problem not found </p>\n                        )}\n                    </div>\n                    <div className=\"answer-form\">\n                        <input\n                            id=\"answer-input\"\n                            className=\"answer-input no-highlight\"\n                            type = \"text\"\n                            placeholder = \"answer here\"\n                            value = {userAnswer}\n                            onChange = {(e) => setAnswer(e.target.value)}\n                            onKeyDown = {handleKeyPress}\n                        />\n                        <button className = \"answer-button no-highlight\" onClick = {handleSubmit}> Submit </button>\n                        <button className = \"forfeit-button no-highlight\" onClick = {handleForfeit}> Give up </button>\n                        <p className = \"problem-text\"> Answer: {problem.answer.match(numericalAnswer)[1]} </p>\n                    </div>\n                </>\n            )}\n\n            {renderCompletedProblems()}\n        </header>\n    );\n}\n\nexport default Learn;","import React from 'react';\nimport './Webpage.css';\n\nfunction Home() {\n    return (\n    <div>\n        <header className=\"homepage-header\">\n            <h1 className = \"Display\">Welcome to <span className = \"gradient\"> SFLO. </span> </h1>\n            <p className = \"desc\" >We help kids solve problems in a fun and interactive way!</p>\n        </header>\n    </div>\n    );\n\n}\n\nexport default Home;\n","import React, { useState } from 'react';\nimport Recaptcha from 'react-recaptcha';\nimport './Webpage.css';\n\nfunction About() {\n\n    const [isVerified, setIsVerified] = useState(false);\n\n    const handleRecaptchaVerify = (response) => {\n        // Callback function to set state when reCAPTCHA is successfully verified\n        setIsVerified(true);\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if (isVerified) {\n            // Handle form submission here, maybe you can use a backend service to send an email\n            console.log(\"Form submitted successfully!\");\n        } else {\n            alert(\"Please verify that you are not a robot.\");\n        }\n    };\n\n\nreturn (\n    <div className=\"webpage\">\n        <section className=\"hero-section\">\n            <div className=\"hero-content\">\n                <h1 className = \"Title\">Welcome to Our About Page</h1>\n                <p>Learn more about us and our mission</p>\n            </div>\n        </section>\n\n        <section className=\"mission-section\">\n            <div className=\"section-content\">\n                <h2>Our Mission</h2>\n                <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam faucibus justo nec elit fermentum, vitae tempor risus hendrerit. Vivamus a ante id nisi lacinia vehicula.</p>\n            </div>\n        </section>\n\n        <section className=\"contact-section\">\n                <div className=\"section-content\">\n                    <h2>Contact Us</h2>\n                    {/* Add a form with reCAPTCHA */}\n                    <form onSubmit={handleSubmit}>\n                        <p>Email: <span id=\"email\">info@example.com</span></p>\n                        <p>Phone: 123-456-7890</p>\n                        {/* Add more contact information as needed */}\n                        {/* Add reCAPTCHA */}\n                        <Recaptcha\n                            sitekey=\"6LckIakpAAAAAPFrpaKRxH5gi_fxxH1Pgk4GUIkT\"\n                            render=\"explicit\"\n                            verifyCallback={handleRecaptchaVerify}\n                        />\n                        <button type=\"submit\">Submit</button>\n                    </form>\n                </div>\n            </section>\n    </div>\n\n);\n}\n\nexport default About;","import React, { useState } from 'react';\nimport './Webpage.css';\n\nfunction Login( {onUsernameChange} ) {\n\n    const [username, setUsername] = useState('');\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n    \n        if (isValidUsername(username)) {\n            setIsLoggedIn(true);\n            onUsernameChange(username); // Update the parent component's username state\n        } else {\n            alert('Invalid username: no special characters, no spaces, less than 25 characters.');\n        }\n    };\n\n    const usernameConvention = /^[a-zA-Z0-9]{1,24}$/;\n    const isValidUsername = (inputUsername) => {\n        return (usernameConvention.test(inputUsername));\n    };\n\n    return (\n        <div>\n            <header className=\"homepage-header\"> \n                <div className = \"login-box\">\n                    <h1 className = \"Display\"> Login</h1> \n                    {isLoggedIn ? (\n                        <p className = \"login-welcome bold\"> Welcome, {username}! </p>\n                        ) : (\n                        <form onSubmit={handleSubmit} className = \"login-form\">\n                            <p className = \"login-desc\"> username </p>\n                            <label>\n                                <input \n                                    className = \"login-input\"\n                                    type=\"text\"\n                                    value={username}\n                                    onChange = {(e) => setUsername(e.target.value)}\n                                />\n                            </label>\n                            <button type=\"submit\" className = \"login-button\"> \n                                Go \n                            </button>\n                            <p className = \"login-tidbit\"> To save your progress, use the same username. </p>\n                        </form>)\n                    }\n                </div>\n            </header>\n        </div>\n    );\n}\n\nexport default Login;","import './App.css';\nimport React, {useState} from 'react';\nimport Navbar from './Navbar';\nimport Learn from './Learn';\nimport Home from './Home';\nimport About from './About';\nimport Login from './Login';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\n\nfunction App() {\n  const [username, setUsername] = useState('');\n\n  const handleUsernameChange = (newUsername) => {\n    setUsername(newUsername);\n  };\n\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <div className=\"App\">\n        <Navbar username = {username}/>\n        <Routes>\n          <Route path=\"/learn\" element={<Learn username = {username}/>} /> \n          <Route path=\"/about\" element={<About/>} />\n          <Route\n            path=\"/login\"\n            element={<Login onUsernameChange={handleUsernameChange} />} // Pass the function as a prop\n          />\n          <Route path=\"/\" element={<Home/>} />\n        </Routes>\n      </div>\n    </Router>\n\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\nreportWebVitals();"],"sourceRoot":""}